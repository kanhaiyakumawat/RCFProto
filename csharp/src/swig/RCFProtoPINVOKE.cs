/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace DeltaVSoft.RCFProto {

using System;
using System.Runtime.InteropServices;

internal class RCFProtoPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("RCFProto_NET_impl", EntryPoint="SWIGRegisterExceptionCallbacks_RCFProto")]
    public static extern void SWIGRegisterExceptionCallbacks_RCFProto(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("RCFProto_NET_impl", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_RCFProto")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_RCFProto(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_RCFProto(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_RCFProto(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(RCFProtoPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(RCFProtoPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("RCFProto_NET_impl", EntryPoint="SWIGRegisterStringCallback_RCFProto")]
    public static extern void SWIGRegisterStringCallback_RCFProto(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_RCFProto(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static RCFProtoPINVOKE() {
  }



  class CsExceptionHelper 
  {
    // C# delegate corresponding to C++ csExceptionCallback
    public delegate void CsExceptionDelegate(string errorMsg);

    static CsExceptionDelegate s_csExceptionDelegate =
		new CsExceptionDelegate(SetPendingCustomException);

    [DllImport("RCFProto_NET_impl", EntryPoint="CustomExceptionRegisterCallback")]
    public static extern void CustomExceptionRegisterCallback(
		CsExceptionDelegate customCallback);

	static void SetPendingCustomException(string errorMsg) 
	{
      SWIGPendingException.Set( new System.Exception(errorMsg) );
    }

    static CsExceptionHelper() 
	{
      CustomExceptionRegisterCallback(s_csExceptionDelegate);
    }
  }
  static CsExceptionHelper g_csExceptionHelper = new CsExceptionHelper();


  protected class SWIGWStringHelper {

    public delegate string SWIGWStringDelegate(IntPtr message);
    static SWIGWStringDelegate wstringDelegate = new SWIGWStringDelegate(CreateWString);

    [DllImport("RCFProto_NET_impl", EntryPoint="SWIGRegisterWStringCallback_RCFProto")]
    public static extern void SWIGRegisterWStringCallback_RCFProto(SWIGWStringDelegate wstringDelegate);

    static string CreateWString([MarshalAs(UnmanagedType.LPWStr)]IntPtr cString) {
      return System.Runtime.InteropServices.Marshal.PtrToStringUni(cString);
    }

    static SWIGWStringHelper() {
      SWIGRegisterWStringCallback_RCFProto(wstringDelegate);
    }
  }

  static protected SWIGWStringHelper swigWStringHelper = new SWIGWStringHelper();


  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_Clear")]
  public static extern void TransportProtocolList_Clear(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_Add")]
  public static extern void TransportProtocolList_Add(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_size")]
  public static extern uint TransportProtocolList_size(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_capacity")]
  public static extern uint TransportProtocolList_capacity(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_reserve")]
  public static extern void TransportProtocolList_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_TransportProtocolList__SWIG_0")]
  public static extern IntPtr new_TransportProtocolList__SWIG_0();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_TransportProtocolList__SWIG_1")]
  public static extern IntPtr new_TransportProtocolList__SWIG_1(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_TransportProtocolList__SWIG_2")]
  public static extern IntPtr new_TransportProtocolList__SWIG_2(int jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_getitemcopy")]
  public static extern int TransportProtocolList_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_getitem")]
  public static extern int TransportProtocolList_getitem(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_setitem")]
  public static extern void TransportProtocolList_setitem(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_AddRange")]
  public static extern void TransportProtocolList_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_GetRange")]
  public static extern IntPtr TransportProtocolList_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_Insert")]
  public static extern void TransportProtocolList_Insert(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_InsertRange")]
  public static extern void TransportProtocolList_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_RemoveAt")]
  public static extern void TransportProtocolList_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_RemoveRange")]
  public static extern void TransportProtocolList_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_Repeat")]
  public static extern IntPtr TransportProtocolList_Repeat(int jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_Reverse__SWIG_0")]
  public static extern void TransportProtocolList_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_Reverse__SWIG_1")]
  public static extern void TransportProtocolList_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TransportProtocolList_SetRange")]
  public static extern void TransportProtocolList_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_TransportProtocolList")]
  public static extern void delete_TransportProtocolList(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_init")]
  public static extern void init();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_deinit")]
  public static extern void deinit();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_isProBuild")]
  public static extern bool isProBuild();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_LogTarget")]
  public static extern void delete_LogTarget(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_LogToStdout")]
  public static extern IntPtr new_LogToStdout();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_LogToStdout")]
  public static extern void delete_LogToStdout(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_LogToDebugWindow")]
  public static extern IntPtr new_LogToDebugWindow();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_LogToDebugWindow")]
  public static extern void delete_LogToDebugWindow(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_LogToEventLog")]
  public static extern IntPtr new_LogToEventLog(string jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_LogToEventLog")]
  public static extern void delete_LogToEventLog(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_LogToFile")]
  public static extern IntPtr new_LogToFile(string jarg1, bool jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_LogToFile")]
  public static extern void delete_LogToFile(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_enableLogging")]
  public static extern void enableLogging(HandleRef jarg1, int jarg2, string jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_disableLogging")]
  public static extern void disableLogging();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Certificate__getType")]
  public static extern int Certificate__getType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Certificate__downcastToWin32Certificate")]
  public static extern IntPtr Certificate__downcastToWin32Certificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Certificate__downcastToX509Certificate")]
  public static extern IntPtr Certificate__downcastToX509Certificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_Certificate")]
  public static extern void delete_Certificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_PemCertificate__SWIG_0")]
  public static extern IntPtr new_PemCertificate__SWIG_0(string jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_PemCertificate__SWIG_1")]
  public static extern IntPtr new_PemCertificate__SWIG_1(string jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_PemCertificate")]
  public static extern void delete_PemCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_X509Certificate__getType")]
  public static extern int X509Certificate__getType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_X509Certificate_getCertificateName")]
  public static extern string X509Certificate_getCertificateName(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_X509Certificate_getIssuerName")]
  public static extern string X509Certificate_getIssuerName(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_X509Certificate")]
  public static extern void delete_X509Certificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32Certificate__getType")]
  public static extern int Win32Certificate__getType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32Certificate_getCertificateName")]
  public static extern string Win32Certificate_getCertificateName(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32Certificate_getIssuerName")]
  public static extern string Win32Certificate_getIssuerName(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32Certificate_exportToPfx")]
  public static extern void Win32Certificate_exportToPfx(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32Certificate_findRootCertificate")]
  public static extern IntPtr Win32Certificate_findRootCertificate(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_Win32Certificate")]
  public static extern void delete_Win32Certificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_PfxCertificate")]
  public static extern IntPtr new_PfxCertificate(string jarg1, [MarshalAs(UnmanagedType.LPWStr)]string jarg2, [MarshalAs(UnmanagedType.LPWStr)]string jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_PfxCertificate_addToStore")]
  public static extern void PfxCertificate_addToStore(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_PfxCertificate")]
  public static extern void delete_PfxCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_StoreCertificate")]
  public static extern IntPtr new_StoreCertificate(int jarg1, int jarg2, [MarshalAs(UnmanagedType.LPWStr)]string jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_StoreCertificate_removeFromStore")]
  public static extern void StoreCertificate_removeFromStore(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_StoreCertificate")]
  public static extern void delete_StoreCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_StoreCertificateIterator")]
  public static extern IntPtr new_StoreCertificateIterator(int jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_StoreCertificateIterator_moveNext")]
  public static extern bool StoreCertificateIterator_moveNext(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_StoreCertificateIterator_reset")]
  public static extern void StoreCertificateIterator_reset(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_StoreCertificateIterator_current")]
  public static extern IntPtr StoreCertificateIterator_current(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_StoreCertificateIterator")]
  public static extern void delete_StoreCertificateIterator(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_setDefaultSslImplementation")]
  public static extern void setDefaultSslImplementation(int jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_getDefaultSslImplementation")]
  public static extern int getDefaultSslImplementation();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_IpAddress__SWIG_0")]
  public static extern IntPtr new_IpAddress__SWIG_0(string jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_IpAddress__SWIG_1")]
  public static extern IntPtr new_IpAddress__SWIG_1(string jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_IpAddress")]
  public static extern void delete_IpAddress(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_ThreadPool__SWIG_0")]
  public static extern IntPtr new_ThreadPool__SWIG_0(uint jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_ThreadPool__SWIG_1")]
  public static extern IntPtr new_ThreadPool__SWIG_1(uint jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_setThreadMinCount")]
  public static extern void ThreadPool_setThreadMinCount(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_getThreadMinCount")]
  public static extern uint ThreadPool_getThreadMinCount(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_setThreadMaxCount")]
  public static extern void ThreadPool_setThreadMaxCount(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_getThreadMaxCount")]
  public static extern uint ThreadPool_getThreadMaxCount(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_setThreadIdleTimeoutMs")]
  public static extern void ThreadPool_setThreadIdleTimeoutMs(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_getThreadIdleTimeoutMs")]
  public static extern uint ThreadPool_getThreadIdleTimeoutMs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_setReserveLastThread")]
  public static extern void ThreadPool_setReserveLastThread(HandleRef jarg1, bool jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_getReserveLastThread")]
  public static extern bool ThreadPool_getReserveLastThread(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_setThreadName")]
  public static extern void ThreadPool_setThreadName(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ThreadPool_getThreadName")]
  public static extern string ThreadPool_getThreadName(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_ThreadPool")]
  public static extern void delete_ThreadPool(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_Endpoint")]
  public static extern void delete_Endpoint(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_TcpEndpoint__SWIG_0")]
  public static extern IntPtr new_TcpEndpoint__SWIG_0(int jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_TcpEndpoint__SWIG_1")]
  public static extern IntPtr new_TcpEndpoint__SWIG_1(string jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TcpEndpoint_getIp")]
  public static extern string TcpEndpoint_getIp(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TcpEndpoint_getPort")]
  public static extern int TcpEndpoint_getPort(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TcpEndpoint_asString")]
  public static extern string TcpEndpoint_asString(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_TcpEndpoint")]
  public static extern void delete_TcpEndpoint(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_Win32NamedPipeEndpoint")]
  public static extern IntPtr new_Win32NamedPipeEndpoint([MarshalAs(UnmanagedType.LPWStr)]string jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_Win32NamedPipeEndpoint")]
  public static extern void delete_Win32NamedPipeEndpoint(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_UnixLocalEndpoint")]
  public static extern IntPtr new_UnixLocalEndpoint(string jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_UnixLocalEndpoint")]
  public static extern void delete_UnixLocalEndpoint(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_HttpEndpoint__SWIG_0")]
  public static extern IntPtr new_HttpEndpoint__SWIG_0(int jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_HttpEndpoint__SWIG_1")]
  public static extern IntPtr new_HttpEndpoint__SWIG_1(string jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_HttpEndpoint")]
  public static extern void delete_HttpEndpoint(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_HttpsEndpoint__SWIG_0")]
  public static extern IntPtr new_HttpsEndpoint__SWIG_0(int jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_HttpsEndpoint__SWIG_1")]
  public static extern IntPtr new_HttpsEndpoint__SWIG_1(string jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_HttpsEndpoint")]
  public static extern void delete_HttpsEndpoint(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_getTransportType")]
  public static extern int ServerTransport_getTransportType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_setMaxIncomingMessageLength")]
  public static extern IntPtr ServerTransport_setMaxIncomingMessageLength(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_getMaxIncomingMessageLength")]
  public static extern uint ServerTransport_getMaxIncomingMessageLength(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_setConnectionLimit")]
  public static extern IntPtr ServerTransport_setConnectionLimit(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_getConnectionLimit")]
  public static extern uint ServerTransport_getConnectionLimit(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_setInitialNumberOfConnections")]
  public static extern IntPtr ServerTransport_setInitialNumberOfConnections(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_getInitialNumberOfConnections")]
  public static extern uint ServerTransport_getInitialNumberOfConnections(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_setThreadPool")]
  public static extern IntPtr ServerTransport_setThreadPool(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_setSupportedProtocols")]
  public static extern IntPtr ServerTransport_setSupportedProtocols(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ServerTransport_getSupportedProtocols")]
  public static extern IntPtr ServerTransport_getSupportedProtocols(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_ServerTransport")]
  public static extern void delete_ServerTransport(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_getTransportType")]
  public static extern int ClientTransport_getTransportType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_setMaxIncomingMessageLength")]
  public static extern void ClientTransport_setMaxIncomingMessageLength(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_getMaxIncomingMessageLength")]
  public static extern uint ClientTransport_getMaxIncomingMessageLength(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_getLastRequestSize")]
  public static extern uint ClientTransport_getLastRequestSize(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_getLastResponseSize")]
  public static extern uint ClientTransport_getLastResponseSize(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_getRunningTotalBytesSent")]
  public static extern ulong ClientTransport_getRunningTotalBytesSent(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_getRunningTotalBytesReceived")]
  public static extern ulong ClientTransport_getRunningTotalBytesReceived(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_ClientTransport_resetRunningTotals")]
  public static extern void ClientTransport_resetRunningTotals(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_ClientTransport")]
  public static extern void delete_ClientTransport(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallbackArgs_mErrorString_set")]
  public static extern void _SwigCallbackArgs_mErrorString_set(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallbackArgs_mErrorString_get")]
  public static extern string _SwigCallbackArgs_mErrorString_get(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallbackArgs_mCertificatePtr_set")]
  public static extern void _SwigCallbackArgs_mCertificatePtr_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallbackArgs_mCertificatePtr_get")]
  public static extern IntPtr _SwigCallbackArgs_mCertificatePtr_get(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new__SwigCallbackArgs")]
  public static extern IntPtr new__SwigCallbackArgs();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete__SwigCallbackArgs")]
  public static extern void delete__SwigCallbackArgs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new__SwigCallback")]
  public static extern IntPtr new__SwigCallback();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete__SwigCallback")]
  public static extern void delete__SwigCallback(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_Run")]
  public static extern void _SwigCallback_Run(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_RunSwigExplicit_SwigCallback")]
  public static extern void _SwigCallback_RunSwigExplicit_SwigCallback(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_ProtoRpcBegin")]
  public static extern void _SwigCallback_ProtoRpcBegin(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, string jarg5, int jarg6);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_ProtoRpcBeginSwigExplicit_SwigCallback")]
  public static extern void _SwigCallback_ProtoRpcBeginSwigExplicit_SwigCallback(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, string jarg5, int jarg6);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_ValidateCertificate")]
  public static extern bool _SwigCallback_ValidateCertificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_ValidateCertificateSwigExplicit_SwigCallback")]
  public static extern bool _SwigCallback_ValidateCertificateSwigExplicit_SwigCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp__SwigCallback_director_connect")]
  public static extern void _SwigCallback_director_connect(HandleRef jarg1, _SwigCallback.SwigDelegate_SwigCallback_0 delegate0, _SwigCallback.SwigDelegate_SwigCallback_1 delegate1, _SwigCallback.SwigDelegate_SwigCallback_2 delegate2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel__CallMethodSwig")]
  public static extern void RcfProtoChannel__CallMethodSwig(HandleRef jarg1, string jarg2, int jarg3, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg4, int jarg5, HandleRef jarg6);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel__GetResponseBufferLength")]
  public static extern int RcfProtoChannel__GetResponseBufferLength(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel__GetResponseBuffer")]
  public static extern void RcfProtoChannel__GetResponseBuffer(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_RcfProtoChannel")]
  public static extern IntPtr new_RcfProtoChannel(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel__CallMethodSwig_WithCopy")]
  public static extern void RcfProtoChannel__CallMethodSwig_WithCopy(HandleRef jarg1, string jarg2, int jarg3, string jarg4, HandleRef jarg5);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel__GetResponseBuffer_WithCopy")]
  public static extern string RcfProtoChannel__GetResponseBuffer_WithCopy(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_Failed")]
  public static extern bool RcfProtoChannel_Failed(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_ErrorText")]
  public static extern string RcfProtoChannel_ErrorText(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_StartCancel")]
  public static extern void RcfProtoChannel_StartCancel(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_Completed")]
  public static extern bool RcfProtoChannel_Completed(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_connect")]
  public static extern void RcfProtoChannel_connect(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_disconnect")]
  public static extern void RcfProtoChannel_disconnect(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setRemoteCallTimeoutMs")]
  public static extern void RcfProtoChannel_setRemoteCallTimeoutMs(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getRemoteCallTimeoutMs")]
  public static extern uint RcfProtoChannel_getRemoteCallTimeoutMs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setConnectTimeoutMs")]
  public static extern void RcfProtoChannel_setConnectTimeoutMs(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getConnectTimeoutMs")]
  public static extern uint RcfProtoChannel_getConnectTimeoutMs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setTransportProtocol")]
  public static extern void RcfProtoChannel_setTransportProtocol(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getTransportProtocol")]
  public static extern int RcfProtoChannel_getTransportProtocol(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setAsynchronousRpcMode")]
  public static extern void RcfProtoChannel_setAsynchronousRpcMode(HandleRef jarg1, bool jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getAsynchronousRpcMode")]
  public static extern bool RcfProtoChannel_getAsynchronousRpcMode(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setPingBackIntervalMs")]
  public static extern void RcfProtoChannel_setPingBackIntervalMs(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getPingBackIntervalMs")]
  public static extern int RcfProtoChannel_getPingBackIntervalMs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setHttpProxy")]
  public static extern void RcfProtoChannel_setHttpProxy(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getHttpProxy")]
  public static extern string RcfProtoChannel_getHttpProxy(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setHttpProxyPort")]
  public static extern void RcfProtoChannel_setHttpProxyPort(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getHttpProxyPort")]
  public static extern int RcfProtoChannel_getHttpProxyPort(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getTransportType")]
  public static extern int RcfProtoChannel_getTransportType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setUsername")]
  public static extern void RcfProtoChannel_setUsername(HandleRef jarg1, [MarshalAs(UnmanagedType.LPWStr)]string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getUsername")]
  public static extern string RcfProtoChannel_getUsername(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setPassword")]
  public static extern void RcfProtoChannel_setPassword(HandleRef jarg1, [MarshalAs(UnmanagedType.LPWStr)]string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getPassword")]
  public static extern string RcfProtoChannel_getPassword(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setKerberosSpn")]
  public static extern void RcfProtoChannel_setKerberosSpn(HandleRef jarg1, [MarshalAs(UnmanagedType.LPWStr)]string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getKerberosSpn")]
  public static extern string RcfProtoChannel_getKerberosSpn(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setEnableCompression")]
  public static extern void RcfProtoChannel_setEnableCompression(HandleRef jarg1, bool jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getEnableCompression")]
  public static extern bool RcfProtoChannel_getEnableCompression(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setCertificate")]
  public static extern void RcfProtoChannel_setCertificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getCertificate")]
  public static extern IntPtr RcfProtoChannel_getCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setCaCertificate")]
  public static extern void RcfProtoChannel_setCaCertificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getCaCertificate")]
  public static extern IntPtr RcfProtoChannel_getCaCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setOpenSslCipherSuite")]
  public static extern void RcfProtoChannel_setOpenSslCipherSuite(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getOpenSslCipherSuite")]
  public static extern string RcfProtoChannel_getOpenSslCipherSuite(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setEnableSchannelCertificateValidation")]
  public static extern void RcfProtoChannel_setEnableSchannelCertificateValidation(HandleRef jarg1, [MarshalAs(UnmanagedType.LPWStr)]string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getEnableSchannelCertificateValidation")]
  public static extern string RcfProtoChannel_getEnableSchannelCertificateValidation(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel__setCertificateValidationCallback")]
  public static extern void RcfProtoChannel__setCertificateValidationCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_setSslImplementation")]
  public static extern void RcfProtoChannel_setSslImplementation(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoChannel_getSslImplementation")]
  public static extern int RcfProtoChannel_getSslImplementation(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_RcfProtoChannel")]
  public static extern void delete_RcfProtoChannel(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__GetRequestBufferLength")]
  public static extern int RcfProtoSession__GetRequestBufferLength(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__GetRequestBuffer")]
  public static extern void RcfProtoSession__GetRequestBuffer(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__SetResponseBuffer")]
  public static extern void RcfProtoSession__SetResponseBuffer(HandleRef jarg1, [In, Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg2, int jarg3);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_SetFailed")]
  public static extern void RcfProtoSession_SetFailed(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_IsCanceled")]
  public static extern bool RcfProtoSession_IsCanceled(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__Commit__SWIG_0")]
  public static extern void RcfProtoSession__Commit__SWIG_0(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__Commit__SWIG_1")]
  public static extern void RcfProtoSession__Commit__SWIG_1(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__GetRequestBuffer_WithCopy")]
  public static extern string RcfProtoSession__GetRequestBuffer_WithCopy(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession__SetResponseBuffer_WithCopy")]
  public static extern void RcfProtoSession__SetResponseBuffer_WithCopy(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getClientUsername")]
  public static extern string RcfProtoSession_getClientUsername(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getTransportProtocol")]
  public static extern int RcfProtoSession_getTransportProtocol(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getTransportType")]
  public static extern int RcfProtoSession_getTransportType(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getEnableCompression")]
  public static extern bool RcfProtoSession_getEnableCompression(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getConnectionDuration")]
  public static extern uint RcfProtoSession_getConnectionDuration(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getRemoteCallCount")]
  public static extern uint RcfProtoSession_getRemoteCallCount(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getTotalBytesReceived")]
  public static extern ulong RcfProtoSession_getTotalBytesReceived(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoSession_getTotalBytesSent")]
  public static extern ulong RcfProtoSession_getTotalBytesSent(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_RcfProtoSession")]
  public static extern void delete_RcfProtoSession(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_RcfProtoServer__SWIG_0")]
  public static extern IntPtr new_RcfProtoServer__SWIG_0();

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_new_RcfProtoServer__SWIG_1")]
  public static extern IntPtr new_RcfProtoServer__SWIG_1(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_delete_RcfProtoServer")]
  public static extern void delete_RcfProtoServer(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_start")]
  public static extern void RcfProtoServer_start(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_stop")]
  public static extern void RcfProtoServer_stop(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer__setCallbackTable")]
  public static extern void RcfProtoServer__setCallbackTable(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setThreadPool")]
  public static extern void RcfProtoServer_setThreadPool(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getThreadPool")]
  public static extern IntPtr RcfProtoServer_getThreadPool(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_addEndpoint")]
  public static extern IntPtr RcfProtoServer_addEndpoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setSupportedTransportProtocols")]
  public static extern void RcfProtoServer_setSupportedTransportProtocols(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getSupportedTransportProtocols")]
  public static extern IntPtr RcfProtoServer_getSupportedTransportProtocols(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setSessionTimeoutMs")]
  public static extern void RcfProtoServer_setSessionTimeoutMs(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getSessionTimeoutMs")]
  public static extern uint RcfProtoServer_getSessionTimeoutMs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setSessionHarvestingIntervalMs")]
  public static extern void RcfProtoServer_setSessionHarvestingIntervalMs(HandleRef jarg1, uint jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getSessionHarvestingIntervalMs")]
  public static extern uint RcfProtoServer_getSessionHarvestingIntervalMs(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setCertificate")]
  public static extern void RcfProtoServer_setCertificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getCertificate")]
  public static extern IntPtr RcfProtoServer_getCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setOpenSslCipherSuite")]
  public static extern void RcfProtoServer_setOpenSslCipherSuite(HandleRef jarg1, string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getOpenSslCipherSuite")]
  public static extern string RcfProtoServer_getOpenSslCipherSuite(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setCaCertificate")]
  public static extern void RcfProtoServer_setCaCertificate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getCaCertificate")]
  public static extern IntPtr RcfProtoServer_getCaCertificate(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setEnableSchannelCertificateValidation")]
  public static extern void RcfProtoServer_setEnableSchannelCertificateValidation(HandleRef jarg1, [MarshalAs(UnmanagedType.LPWStr)]string jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getEnableSchannelCertificateValidation")]
  public static extern string RcfProtoServer_getEnableSchannelCertificateValidation(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_setSslImplementation")]
  public static extern void RcfProtoServer_setSslImplementation(HandleRef jarg1, int jarg2);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_RcfProtoServer_getSslImplementation")]
  public static extern int RcfProtoServer_getSslImplementation(HandleRef jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_LogToStdout_SWIGUpcast")]
  public static extern IntPtr LogToStdout_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_LogToDebugWindow_SWIGUpcast")]
  public static extern IntPtr LogToDebugWindow_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_LogToEventLog_SWIGUpcast")]
  public static extern IntPtr LogToEventLog_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_LogToFile_SWIGUpcast")]
  public static extern IntPtr LogToFile_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_PemCertificate_SWIGSmartPtrUpcast")]
  public static extern IntPtr PemCertificate_SWIGSmartPtrUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_X509Certificate_SWIGSmartPtrUpcast")]
  public static extern IntPtr X509Certificate_SWIGSmartPtrUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32Certificate_SWIGSmartPtrUpcast")]
  public static extern IntPtr Win32Certificate_SWIGSmartPtrUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_PfxCertificate_SWIGSmartPtrUpcast")]
  public static extern IntPtr PfxCertificate_SWIGSmartPtrUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_StoreCertificate_SWIGSmartPtrUpcast")]
  public static extern IntPtr StoreCertificate_SWIGSmartPtrUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_TcpEndpoint_SWIGUpcast")]
  public static extern IntPtr TcpEndpoint_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_Win32NamedPipeEndpoint_SWIGUpcast")]
  public static extern IntPtr Win32NamedPipeEndpoint_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_UnixLocalEndpoint_SWIGUpcast")]
  public static extern IntPtr UnixLocalEndpoint_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_HttpEndpoint_SWIGUpcast")]
  public static extern IntPtr HttpEndpoint_SWIGUpcast(IntPtr jarg1);

  [DllImport("RCFProto_NET_impl", EntryPoint="CSharp_HttpsEndpoint_SWIGUpcast")]
  public static extern IntPtr HttpsEndpoint_SWIGUpcast(IntPtr jarg1);
}

}
