/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.deltavsoft.rcfproto;

class _SwigCallback {
  private long swigCPtr;
  boolean swigCMemOwn;

  _SwigCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  static long getCPtr(_SwigCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RCFProtoJNI.delete__SwigCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    RCFProtoJNI._SwigCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    RCFProtoJNI._SwigCallback_change_ownership(this, swigCPtr, true);
  }

  public _SwigCallback() {
    this(RCFProtoJNI.new__SwigCallback(), true);
    RCFProtoJNI._SwigCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void Run() {
    if (getClass() == _SwigCallback.class) RCFProtoJNI._SwigCallback_Run(swigCPtr, this); else RCFProtoJNI._SwigCallback_RunSwigExplicit_SwigCallback(swigCPtr, this);
  }

  public void ProtoRpcBegin(_SwigCallbackArgs args, RcfProtoServer server, RcfProtoSession context, String serviceName, int methodId) {
    if (getClass() == _SwigCallback.class) RCFProtoJNI._SwigCallback_ProtoRpcBegin(swigCPtr, this, _SwigCallbackArgs.getCPtr(args), args, RcfProtoServer.getCPtr(server), server, RcfProtoSession.getCPtr(context), context, serviceName, methodId); else RCFProtoJNI._SwigCallback_ProtoRpcBeginSwigExplicit_SwigCallback(swigCPtr, this, _SwigCallbackArgs.getCPtr(args), args, RcfProtoServer.getCPtr(server), server, RcfProtoSession.getCPtr(context), context, serviceName, methodId);
  }

  public boolean ValidateCertificate(_SwigCallbackArgs args) {
    return (getClass() == _SwigCallback.class) ? RCFProtoJNI._SwigCallback_ValidateCertificate(swigCPtr, this, _SwigCallbackArgs.getCPtr(args), args) : RCFProtoJNI._SwigCallback_ValidateCertificateSwigExplicit_SwigCallback(swigCPtr, this, _SwigCallbackArgs.getCPtr(args), args);
  }

}
