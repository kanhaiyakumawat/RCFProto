/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.deltavsoft.rcfproto;

/**
 * Base class for all client transports. 
 */
public class ClientTransport {
  private long swigCPtr;
  boolean swigCMemOwn;

  ClientTransport(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  static long getCPtr(ClientTransport obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RCFProtoJNI.delete_ClientTransport(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * Returns the transport type of this client transport. 
   */
  public TransportType getTransportType() {
    return TransportType.swigToEnum(RCFProtoJNI.ClientTransport_getTransportType(swigCPtr, this));
  }

  /**
   * Sets maximum incoming message length. Incoming messages that are larger than this size will be dropped. 
   */
  public void setMaxIncomingMessageLength(long maxMessageLength) {
    RCFProtoJNI.ClientTransport_setMaxIncomingMessageLength(swigCPtr, this, maxMessageLength);
  }

  /**
   * Returns maximum incoming message length. 
   */
  public long getMaxIncomingMessageLength() {
    return RCFProtoJNI.ClientTransport_getMaxIncomingMessageLength(swigCPtr, this);
  }

  /**
   * Returns the byte size of the last request sent on the client transport. 
   */
  public long getLastRequestSize() {
    return RCFProtoJNI.ClientTransport_getLastRequestSize(swigCPtr, this);
  }

  /**
   * Returns the byte size of the last response received on the client transport. 
   */
  public long getLastResponseSize() {
    return RCFProtoJNI.ClientTransport_getLastResponseSize(swigCPtr, this);
  }

  /**
   * Returns the running total of bytes sent on the client transport. 
   */
  public java.math.BigInteger getRunningTotalBytesSent() {
    return RCFProtoJNI.ClientTransport_getRunningTotalBytesSent(swigCPtr, this);
  }

  /**
   * Returns the running total of bytes received on the client transport. 
   */
  public java.math.BigInteger getRunningTotalBytesReceived() {
    return RCFProtoJNI.ClientTransport_getRunningTotalBytesReceived(swigCPtr, this);
  }

  /**
   * Resets the bytes-sent and bytes-received running totals to zero. 
   */
  public void resetRunningTotals() {
    RCFProtoJNI.ClientTransport_resetRunningTotals(swigCPtr, this);
  }

}
