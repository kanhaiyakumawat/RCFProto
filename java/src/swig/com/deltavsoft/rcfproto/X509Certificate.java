/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.deltavsoft.rcfproto;

/**
 * Represents an in-memory certificate, usually from a remote peer. Only applicable to OpenSSL. 
 */
public class X509Certificate extends Certificate {
  private long swigCPtr;
  private boolean swigCMemOwnDerived;

  X509Certificate(long cPtr, boolean cMemoryOwn) {
    super(RCFProtoJNI.X509Certificate_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(X509Certificate obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        RCFProtoJNI.delete_X509Certificate(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  CertificateImplementationType _getType() {
    return CertificateImplementationType.swigToEnum(RCFProtoJNI.X509Certificate__getType(swigCPtr, this));
  }

  /**
   * Gets the name of the certificate. 
   */
  public String getCertificateName() {
    return RCFProtoJNI.X509Certificate_getCertificateName(swigCPtr, this);
  }

  /**
   * Gets the name of the issuer of the certificate. 
   */
  public String getIssuerName() {
    return RCFProtoJNI.X509Certificate_getIssuerName(swigCPtr, this);
  }

}
